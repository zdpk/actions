name: Reusable — Rsync Files to Remote Repo

on:
  workflow_call:
    inputs:
      src-ref:
        description: 'Source ref/branch.'
        required: false
        default: 'main'
        type: string
      src-path:
        description: 'Source directory to sync.'
        required: false
        default: '.'
        type: string
      dst-repo:
        description: 'Destination repository (owner/repo).'
        required: true
        type: string
      dst-ref:
        description: 'Destination branch.'
        required: false
        default: 'main'
        type: string
      dst-path:
        description: 'Destination path inside destination repo.'
        required: false
        default: '.'
        type: string
    secrets:
      github-pat:
        description: 'Token with write access to destination repository.'
        required: true

concurrency:
  group: rsync-${{ inputs.dst-repo }}-${{ inputs.dst-ref }}
  cancel-in-progress: true

jobs:
  rsync:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      SRC_REPO: ${{ github.repository }}
      SRC_REF: ${{ inputs.src-ref }}
      SRC_PATH: ${{ inputs.src-path }}
      DST_REPO: ${{ inputs.dst-repo }}
      DST_REF: ${{ inputs.dst-ref }}
      DST_PATH: ${{ inputs.dst-path }}
      GIT_USER_NAME: 'github-actions[bot]'
      GIT_USER_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
      GITHUB_PAT: ${{ secrets.github-pat }}
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        # with:
        #   repository: ${{ env.SRC_REPO }}
        #   ref: ${{ env.SRC_REF }}
        #   token: ${{ secrets.src-repo-token || github.token }}
      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DST_REPO }}
          ref: ${{ env.DST_REF }}
          token: ${{ env.GITHUB_PAT }}
          path: ${{ inputs.dst-path }}

      - name: Mirror with rsync
        run: |
          set -euo pipefail
          # Ensure source path exists, if not, create an empty dir to sync (which will delete dest)
          mkdir -p "$SRC_PATH"
          # Ensure destination path exists
          mkdir -p "dest-repo/$DST_PATH"

          rsync -av --delete \
            --filter=':- .gitignore' \
            --exclude='.git/' \
            "$SRC_PATH/" "dest-repo/$DST_PATH/"

      - name: Commit and push to destination
        run: |
          set -euo pipefail

          git config user.name "$GIT_USER_NAME"
          git config user.email "$GIT_USER_EMAIL"

          git add -A

          if git diff --cached --quiet; then
            echo "No changes to commit in destination."
            exit 0
          fi

          git commit -m "chore(sync): rsync from ${{ env.SRC_REPO }}@${{ env.SRC_REF }} [skip ci]"
          # checkout action이 origin 자격 증명을 이미 세팅
          git push origin HEAD:${{ env.DST_REF }}
